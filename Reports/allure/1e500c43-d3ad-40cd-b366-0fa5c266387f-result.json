{"name": "test_land_acquisition", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_login.Test001Login object at 0x7ffac3081160>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d18350286fd9eaa05198c686f9caccd8\")>\n\n    def test_land_acquisition(self,setup):\n        pla = ProjectLandAcquisition(setup)\n        time.sleep(1)\n>       pla.set_acquisition_details(\"Guthi\",\"2000\",\"1000\",\"2000\",\"2/2/2021\",\"\",\"\")\n\ntestCases/test_login.py:240: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageObjects/ProjectDetailsForm/ProjectLandAcquisition.py:34: in set_acquisition_details\n    utils.write_using_xpath(self.driver,self.input_date_remaining_land_xpath,date)\nUtils/ComplexElement.py:22: in write_using_xpath\n    element = explicit_wait_present(driver,locator)\nUtils/ComplexElement.py:13: in explicit_wait_present\n    element = wait.until(EC.presence_of_element_located((By.XPATH,locator)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"d18350286fd9eaa05198c686f9caccd8\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7ffac30813a0>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../../../.local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException"}, "start": 1629175729434, "stop": 1629175742667, "uuid": "fb6da61e-fc0d-48e7-b14d-3439edaa071e", "historyId": "7244674a690f17671e8eca41631bebb0", "testCaseId": "b30fda29eb7b4588ba02d7b62dfcbe4d", "fullName": "testCases.test_login.Test001Login#test_land_acquisition", "labels": [{"name": "parentSuite", "value": "testCases"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "Test001Login"}, {"name": "host", "value": "bipin-Nitro-AN515-54"}, {"name": "thread", "value": "16855-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testCases.test_login"}]}